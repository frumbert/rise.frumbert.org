:root {

  --control__page-background: transparent;
  --control__page-text: #000;
  --control__page-font: sans-serif;

  --control__container-shadow: 0 .4rem 1.2rem .2rem #0000000d;
  --control__container-border: .1rem solid #ddd;
  --control__container-background: #fff;
  --control__container-radius: 5px;

  --control__feedback-background: #f8f8f8;
  --control__feedback-alignment: left;
  --control__feedback-text: #666;

  --control__textarea-border: .1rem solid #ddd;
  --control__textarea-background: #fff;
  --control__textarea-resize: none;

  --control__button-border: none;
  --control__button-background: lightgrey;
  --control__button-text: #000;
  --control__button-radius: 2rem;
  --control__button-padding: .75rem 3rem;

  --control__drop-border: 1px dashed lightgrey;
  --control__drop-background: linear-gradient(to bottom, transparent, #00000010);
  --control__drop-width: 5rem;
  --control__drop_radius: 3px;
}

/* =============== main styling =============== */

* { box-sizing: border-box; }

html, body {
  margin: 0;
}

body {
  font-family: var(--control__page-font, sans-serif);
  background-color: var(--control__page-background, transparent);
  color: var(--control__page-text, #000);
}

main {
  background-color: var(---control__container-background, #fff);
  border-radius: var(--control__container-radius);
  box-shadow: var(--control__container-shadow);
  margin: 2rem .5rem;
  padding: 3rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  > * {
    margin: 0;
  }
  img, audio, video, iframe {
    max-width: 100%;
    height: auto;
  }
  audio, video, iframe {
    width: 100%;
  }
  img {
    width: min-content;
    max-width: unset;
  }
  >label, output {
    width: 100%;
    align-self: flex-start;
  }
  button {
    border: var(--control__button-border, unset);
    background-color: var(--control__button-background, unset);
    color: var(--control__button-text, currentColor);
    border-radius: var(--control__button-radius, unset);
    padding: var(--control__button-padding, .75rem 3rem);
  }
  output:not(:empty) {
    padding: 1rem .25rem;
    background-color: var(--control__feedback-background, #f8f8f8);
    color: var(--control__feedback-text, inherit);
    text-align: var(--control__feedback-alignment, center);
  }
}

#question {
  line-height: 2;
}

.grid-stack {
  display: grid;
  width: 100%;
  grid-template-columns: 1fr 3fr;
  gap: 1rem;

  /* JS will calculate number of right-hand fieldsets and set this */
  --item-count: 3; 
  grid-template-rows: repeat(var(--item-count), 1fr);

  > fieldset {
    grid-column: 2;
    height: 100%; /* Needed to fill the row height */

    &:first-of-type {
      grid-column: 1;
      grid-row: 1 / -1; /* Span all rows */
      height: auto; /* Let it grow with the right column */
    }
  }
}

body.longtext textarea {
  width: 100%;
  min-height: 10rem;
  padding: 1rem;
  border-radius: 0.5rem;
  font-size: inherit;
  font-family: inherit;
  resize: var(--control__textarea-resize);
  border: var(--control__textarea-border);
  background-color: var(--control__textarea-background);
  position: relative;
  + [stats] {
    margin-top: -0.9rem; /* undo gap */
    font-size: 0.75rem;
    opacity: 0.8;
    width: 100%;
  }
}

.flex-row,
.flex-row-even {
  width: 100%;
  display: flex;
  flex-direction: row;
  gap: 1rem;
  justify-content: space-evenly;
  align-items: stretch;
}
.flex-row-even > * {
  flex: 1;
}
.flex-3-1 > * {
  flex: 1;
  &:first-child {
    flex: 3;
  }
}
.flex-1-3 > * {
  flex: 3;
  &:first-child {
    flex: 1;
  }
}
.flex-wrap {
  flex-wrap: wrap;
}
.flex-column-wide {
  width: 100%;
}
.flex-column-narrow {
  justify-items: flex-start;
}
.flex-column-wide,
.flex-column-narrow {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  > * {
    flex: 1;
  }
}
.flex-4 { flex: 4; }
.flex-3 { flex: 3; }
.flex-2 { flex: 2; }
.flex-1 { flex: 1; }

/* generic label layout

+----------------------+
| (x)  | ?media        |
|      | text          |
|      | ?media        |
+----------------------+
*/

span.drop {
  border: var(--control__drop-border);
  background: var(--control__drop-background);
  min-width: var(--control__drop-width);
  height: 1.5rem;
  display: inline-block;
  vertical-align: text-bottom;
  border-radius: var(--control__drop_radius);
  display: inline-flex;
  justify-content: center;
  align-items: center;
  .draggable-label {
    &:hover { background-color: transparent; }
    .control {
      display: none;
    }
  }
}

.draggable-label {
  display: flex;
  align-items: flex-start;
  cursor: grab;
  user-select: none;
  gap: 1rem;
  transition: background-color .2s ease;
  padding: 0.5rem;
  &:hover {
    background-color: #f8f8f8;
  }
  .control {
    color: #0078d4;
    &::before {
      content: '☰';
    }
  }
  &.sortable-chosen {
      cursor: grabbing;
  }
}

.radio-label,
.checkbox-label {
  display: flex;
  align-items: flex-start;
  cursor: pointer;
  user-select: none;
  gap: 1rem;
  transition: background-color .2s ease;
  padding: 0.5rem;
  &:hover {
    background-color: #f8f8f8;
  }
  &:has(:checked) {
    background-color: #f4f4f4;
  }
  input[type='radio'] + .control {
    border-radius: 50%;
  }

  input[type="radio"],
  input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    pointer-events: none;
    &:checked + .control {
      border-color: #0078d4;
    }
  }

  .control {
    width: 1.2rem;
    height: 1.2rem;
    border: 2px solid #888;
    background: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    transition: border-color 0.2s;
  }

  span:last-child {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
}

.radio-label {
  border-radius: 0.5rem;
  input[type="radio"]:checked + .control::after {
    content: "";
    width: 0.6em;
    height: 0.6em;
    background: #0078d4;
    border-radius: 50%;
    display: block;
  }
}

.checkbox-label {
  input[type="checkbox"]:checked + .control::after {
    content: "✓";
    color: #0078d4;
    margin: 0.2rem;
    display: block;
  }
}

.flex-column-wide.boxes {
  gap: 0;
}
.boxes {
	box-shadow: 0 0 2rem rgba(0,0,0,.1);
	border-radius: .25rem;
  > label {
    background-color: white;
    border: 1px solid rgba(0,0,0,.125);
    margin-bottom: -1px;
    min-height: 3rem;
    &:first-of-type {
      border-radius: .25rem .25rem 0 0;
    }
    &:last-of-type {
      border-radius: 0 0 .25rem .25rem;
      margin-bottom: 0;
    }
    .control {
      padding: .75rem 1.25rem;
      display: block;
    }
    span:not(.control) {
      align-self:center;
    }
    img {
      width: 100%;
      object-fit: contain;
      display: block; /* important to prevent bottom margin, vertical-align: top; also works */
      text-align: left;
    }
  }
}